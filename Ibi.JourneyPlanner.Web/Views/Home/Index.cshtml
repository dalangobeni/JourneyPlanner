@{
    ViewBag.Title = "Index";
}

@section css {
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.5/leaflet.css" />
     <!--[if lte IE 8]>
         <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.5/leaflet.ie.css" />
     <![endif]-->
    
    <style>
        #map {
            height: 560px;
        }
    </style>
}

@section scripts {
    <script src="http://cdn.leafletjs.com/leaflet-0.5/leaflet.js"></script>
    <script>
        // create a map in the "map" div, set the view to a given place and zoom
        var map = L.map('map').setView([53.4791, -2.2457], 13);

        // add an OpenStreetMap tile layer
        L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        function onEachFeature(feature, layer) {
            // does this feature have a property named popupContent?
            if (feature.properties && feature.properties.name) {
                layer.bindPopup(feature.properties.name);
            }
        }

        function getRequestUrl(perPage, pageNumber) {
            // var url = "http://api.citysdk.waag.org/admr.uk.gr.manchester/nodes?geom&osm::amenity=parking&per_page=" + perPage;
            var url = "http://api.citysdk.waag.org/admr.uk.gr.manchester/ptstops?geom&osm::amenity=parking&per_page=" + perPage;
            if (pageNumber) {
                url += "&page=" + pageNumber;
            }

            return url;
        }

        function loadPageBlock(numberOfSitesPerPage, pageNumber) {
            pageNumber = pageNumber || 1;

            //$.getJSON(getRequestUrl(numberOfSitesPerPage, pageNumber), function (response) {
            $.getJSON("/api/Routing", function (response) {
                if (response && response.results) {
                    for (var i = response.results.length - 1; i >= 0; i--) {
                        var thisItem = response.results[i];

                        if (true || thisItem.name) {

                            //var points = [];

                            //var coordinateList = thisItem.geom.coordinates;
                            //for (var j = coordinateList.length - 1; j >= 0; j--) {
                            //    var thisCoord = coordinateList[j];
                            //    var point = [];
                            //    point.push(thisCoord.Longitude);
                            //    point.push(thisCoord.Latitude);

                            //    points.push(point);
                            //}

                            // points = [[-100, 40], [-105, 45], [-110, 55]];
                            var geojsonFeature = {
                                "type": "Feature",
                                "properties": {
                                    "name": thisItem.name,
                                    "cdk_id": "1", // thisItem.cdk_id,
                                    "layer_id": "5" // thisItem.layer_id
                                },
                                "geometry": {
                                    "type": thisItem.geom.type,
                                    "coordinates": thisItem.geom.coordinates
                                }
                            };

                            var myStyle = {
                                "color": "#ff7800",
                                "weight": 5,
                                "opacity": 1
                            };

                            L.geoJson(geojsonFeature, {
                                style: myStyle,
                                onEachFeature: onEachFeature
                            }).addTo(map);
                        }
                    }

                    var nextPage = response.next_page;
                    if (nextPage && nextPage > 0) {
                        loadPageBlock(numberOfSitesPerPage, nextPage);
                    }
                }
            });
        }

        // Load all of the routes
        var numberOfSitesPerPage = 500;

        loadPageBlock(numberOfSitesPerPage);
    </script>
}

<h1>API Tests</h1>

<div id="map"></div>